@model IEnumerable<IndexBookViewModel>
@{
    ViewData["Title"] = "List Book";
}
<div class="row">
    <div class="col-md-10 offset-md-1 mt-5">
        <div class="row">
            <div class="col-md-4 mb-4">
                <select id="authorFilter" class="form-select">
                    <option value="">All Author</option>
                </select>
            </div>
            <div class="col-md-4">
                <select id="categoryFilter" class="form-select">
                    <option value="">All Categories</option>
                </select>
            </div>
            <div class="col-md-4">
                <select id="publisherFilter" class="form-select">
                    <option value="">All Publishers</option>
                </select>
            </div>
        </div>
        <table id="books" class="table table-striped table-bordered mt-3">
            <thead>
            <tr>
                <th>Cover</th>
                <th>Name</th>
                <th>Author</th>
                <th>Category</th>
                <th>Publisher</th>
                <th>Operations</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            var table = $("#books").DataTable({
                responsive: true,
                processing: true,
                ajax: {
                    url: '@Url.Action("GetBorrowable", "Book", new { Area = "Home" })',
                    dataSrc: ''
                },
                columns: [
                    {data: null,
                    render: function(data, type, row) {
                      return `<img class="mx-auto d-block img-thumbnail" style="height: 6em; width: 6em;" src="${row.cover}"/>`
                    }},             
                    {data: "name"},
                    {data: "author"},
                    {data: "category"},
                    {data: "publisher"},
                    {
                        data: null,
                        render: function(data, type, row) {
                            return `<a class="btn btn-success mx-2" href="${row.borrowLink}">Borrow</a>`+
                                 `<a class="btn btn-primary" href="${row.detailLink}">See Detail</a>`;
                        },
                    }
                ],
                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;

                        if ($(column.header()).text() === 'Author') {
                            var select = $('#authorFilter');
                        } else if ($(column.header()).text() === 'Category') {
                            var select = $('#categoryFilter');
                        } else if ($(column.header()).text() === 'Publisher') {
                            var select = $('#publisherFilter');
                        } else {
                            return; // Skip the rest
                        }

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });

                        select.on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });
                    });
                }
            });
        });
    </script>
}